学历过滤器链是怎么定义先后顺序的，然后将过滤器链写出来，便于理解

基本只剩一个handler文件夹没学；接下来需要学习前端，或者运行整个工程进行调试学习
写完ContentIndexController,ContentSearchController,MainController

以下是业务处理的预处理步骤以及后处理步骤，接下来需要判断发生的前后事件，用图画出来流程

如果有 DisableOnCondition注解，则使用该注解的环绕通知
如果有 SensitiveConceal注解，则使用该注解的环绕通知
如果有 CacheLock注解，则使用该注解的环绕通知

向前端返回信息时，使用 CommonResultControllerAdvice 修改返回内容
当出现异常时，使用 ControllerExceptionHandler 捕获异常，修改返回内容

请求发送到controller接口前以及controller接口结束后，使用 ControllerLogApp 记录日志

请求到来时，使用 CorsFilter 进行跨域过滤器
请求到来时，使用 LogFilter 进行日志记录
请求到来时，使用 AdminAuthenticationFilter/ApiAuthenticationFilter 进行身份权限过滤器

请求到来时，使用 HaloRequestMappingHandler 进行路径分发，同时屏蔽一些静态资源的的访问

使用WebMvcAutoConfiguraion配置


CrosFilter(解决跨域问题)
LogFilter(日志记录，在filterChain.doFilter前后记录日志)
AdminAuthenticationFilter/ApiAuthenticationFilter(身份权限过滤器)
HaloRequestMappingHandlerMapping(请求路径分发，同时屏蔽一些静态资源的的访问)